{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\K. C. Fike\\\\Desktop\\\\github\\\\productapp\\\\src\\\\routing\\\\ToggleLink.js\";\nimport React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nexport class ToggleLink extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      this.setState({\n        doRedirect: true\n      }, () => this.setState({\n        doRedirect: false\n      }));\n    };\n\n    this.state = {\n      doRedirect: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Route, {\n      path: this.props.to,\n      exact: this.props.exact,\n      children: routeProps => {\n        const baseClasses = this.props.className || \"m-2 btn btn-block\";\n        const activeClass = this.props.activeClass || \"btn-primary\";\n        const inActiveClass = this.props.inActiveClass || \"btn-secondary\";\n        const combinedClasses = `${baseClasses} ${routeProps.match ? activeClass : inActiveClass}`;\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }\n        }, this.state.doRedirect && /*#__PURE__*/React.createElement(Redirect, {\n          to: this.props.to,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 44\n          }\n        }), /*#__PURE__*/React.createElement(\"button\", {\n          className: combinedClasses,\n          onClick: this.handleClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }\n        }, this.props.children));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 16\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/K. C. Fike/Desktop/github/productapp/src/routing/ToggleLink.js"],"names":["React","Component","Route","Redirect","ToggleLink","constructor","props","handleClick","setState","doRedirect","state","render","to","exact","routeProps","baseClasses","className","activeClass","inActiveClass","combinedClasses","match","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AAEA,OAAO,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AAEtCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAOnBC,WAPmB,GAOL,MAAM;AAChB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAd,EACI,MAAM,KAAKD,QAAL,CAAc;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAd,CADV;AAEH,KAVkB;;AAEf,SAAKC,KAAL,GAAa;AACTD,MAAAA,UAAU,EAAE;AADH,KAAb;AAGH;;AAODE,EAAAA,MAAM,GAAG;AACL,wBAAO,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,KAAKL,KAAL,CAAWM,EAAzB;AAA8B,MAAA,KAAK,EAAG,KAAKN,KAAL,CAAWO,KAAjD;AACC,MAAA,QAAQ,EAAGC,UAAU,IAAI;AAE7B,cAAMC,WAAW,GAAG,KAAKT,KAAL,CAAWU,SAAX,IAAwB,mBAA5C;AACA,cAAMC,WAAW,GAAG,KAAKX,KAAL,CAAWW,WAAX,IAA0B,aAA9C;AACA,cAAMC,aAAa,GAAG,KAAKZ,KAAL,CAAWY,aAAX,IAA4B,eAAlD;AAEA,cAAMC,eAAe,GAChB,GAAEJ,WAAY,IAAGD,UAAU,CAACM,KAAX,GAAmBH,WAAnB,GAAiCC,aAAc,EADrE;AAGA,4BAAQ,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACF,KAAKR,KAAL,CAAWD,UAAX,iBAAyB,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAG,KAAKH,KAAL,CAAWM,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADvB,eAEJ;AAAQ,UAAA,SAAS,EAAGO,eAApB;AAAsC,UAAA,OAAO,EAAG,KAAKZ,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,KAAKD,KAAL,CAAWe,QADhB,CAFI,CAAR;AAMF,OAhBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAiBH;;AAhCqC","sourcesContent":["import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport class ToggleLink extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            doRedirect: false\n        }\n    }\n\n    handleClick = () => {\n        this.setState({ doRedirect: true}, \n            () => this.setState({ doRedirect: false }));\n    }\n\n    render() {\n        return <Route path={ this.props.to } exact={ this.props.exact }\n                children={ routeProps => {\n            \n            const baseClasses = this.props.className || \"m-2 btn btn-block\";\n            const activeClass = this.props.activeClass || \"btn-primary\";\n            const inActiveClass = this.props.inActiveClass || \"btn-secondary\"\n\n            const combinedClasses = \n                `${baseClasses} ${routeProps.match ? activeClass : inActiveClass}`\n            \n            return  <React.Fragment>\n                { this.state.doRedirect && <Redirect to={ this.props.to } /> }\n                <button className={ combinedClasses } onClick={ this.handleClick }> \n                    {this.props.children} \n                </button>             \n            </React.Fragment>\n         }} />\n    }\n}\n"]},"metadata":{},"sourceType":"module"}
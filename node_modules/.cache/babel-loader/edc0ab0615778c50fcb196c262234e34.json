{"ast":null,"code":"import { STORE, UPDATE, DELETE } from \"./modelActionTypes\";\nimport { initialData } from \"./initialData\";\nexport default function (storeData, action) {\n  switch (action.type) {\n    case STORE:\n      return { ...storeData,\n        [action.dataType]: storeData[action.dataType].concat([action.payload])\n      };\n\n    case UPDATE:\n      return { ...storeData,\n        [action.dataType]: storeData[action.dataType].map(p => p.id === action.payload.id ? action.payload : p)\n      };\n\n    case DELETE:\n      return { ...storeData,\n        [action.dataType]: storeData[action.dataType].filter(p => p.id !== action.payload)\n      };\n\n    default:\n      return storeData || initialData.modelData;\n  }\n}","map":{"version":3,"sources":["C:/Users/K. C. Fike/Desktop/github/productapp/src/store/modelReducer.js"],"names":["STORE","UPDATE","DELETE","initialData","storeData","action","type","dataType","concat","payload","map","p","id","filter","modelData"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,MAAhB,EAAwBC,MAAxB,QAAsC,oBAAtC;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,eAAe,UAASC,SAAT,EAAoBC,MAApB,EAA4B;AACvC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,KAAL;AACI,aAAO,EACH,GAAGI,SADA;AAEH,SAACC,MAAM,CAACE,QAAR,GACIH,SAAS,CAACC,MAAM,CAACE,QAAR,CAAT,CAA2BC,MAA3B,CAAkC,CAACH,MAAM,CAACI,OAAR,CAAlC;AAHD,OAAP;;AAKJ,SAAKR,MAAL;AACI,aAAO,EACH,GAAGG,SADA;AAEH,SAACC,MAAM,CAACE,QAAR,GAAmBH,SAAS,CAACC,MAAM,CAACE,QAAR,CAAT,CAA2BG,GAA3B,CAA+BC,CAAC,IAC/CA,CAAC,CAACC,EAAF,KAASP,MAAM,CAACI,OAAP,CAAeG,EAAxB,GAA6BP,MAAM,CAACI,OAApC,GAA8CE,CAD/B;AAFhB,OAAP;;AAKJ,SAAKT,MAAL;AACI,aAAO,EACH,GAAGE,SADA;AAEH,SAACC,MAAM,CAACE,QAAR,GAAmBH,SAAS,CAACC,MAAM,CAACE,QAAR,CAAT,CACdM,MADc,CACPF,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASP,MAAM,CAACI,OADd;AAFhB,OAAP;;AAKJ;AACI,aAAOL,SAAS,IAAID,WAAW,CAACW,SAAhC;AApBR;AAsBH","sourcesContent":["import { STORE, UPDATE, DELETE } from \"./modelActionTypes\";\nimport { initialData } from \"./initialData\";\n\nexport default function(storeData, action) {\n    switch (action.type) {\n        case STORE:\n            return {\n                ...storeData, \n                [action.dataType]:\n                    storeData[action.dataType].concat([action.payload])\n            }\n        case UPDATE:        \n            return {\n                ...storeData,\n                [action.dataType]: storeData[action.dataType].map(p => \n                    p.id === action.payload.id ? action.payload : p)\n            }\n        case DELETE:\n            return {\n                ...storeData,\n                [action.dataType]: storeData[action.dataType]\n                    .filter(p => p.id !== action.payload)\n            }\n        default: \n            return storeData || initialData.modelData;\n    }   \n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { connect } from \"react-redux\";\nimport { endEditing } from \"./stateActions\";\nimport { PRODUCTS, SUPPLIERS } from \"./dataTypes\";\nimport { saveAndEndEditing } from \"./multiActionCreators\";\nexport const EditorConnector = (dataType, presentationComponent) => {\n  const mapStateToProps = storeData => ({\n    editing: storeData.stateData.editing && storeData.stateData.selectedType === dataType,\n    product: storeData.modelData[PRODUCTS].find(p => p.id === storeData.stateData.selectedId) || {},\n    supplier: storeData.modelData[SUPPLIERS].find(s => s.id === storeData.stateData.selectedId) || {}\n  });\n\n  const mapDispatchToProps = {\n    cancelCallback: endEditing,\n    saveCallback: data => saveAndEndEditing(data, dataType)\n  };\n\n  const mergeProps = (dataProps, functionProps, ownProps) => ({ ...dataProps,\n    ...functionProps,\n    ...ownProps\n  });\n\n  return connect(mapStateToProps, mapDispatchToProps, mergeProps)(presentationComponent);\n};","map":{"version":3,"sources":["C:/Users/K. C. Fike/Desktop/github/productapp/src/store/EditorConnector.js"],"names":["connect","endEditing","PRODUCTS","SUPPLIERS","saveAndEndEditing","EditorConnector","dataType","presentationComponent","mapStateToProps","storeData","editing","stateData","selectedType","product","modelData","find","p","id","selectedId","supplier","s","mapDispatchToProps","cancelCallback","saveCallback","data","mergeProps","dataProps","functionProps","ownProps"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAqC,aAArC;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AAEA,OAAO,MAAMC,eAAe,GAAG,CAACC,QAAD,EAAWC,qBAAX,KAAqC;AAEhE,QAAMC,eAAe,GAAIC,SAAD,KAAgB;AACpCC,IAAAA,OAAO,EAAED,SAAS,CAACE,SAAV,CAAoBD,OAApB,IACFD,SAAS,CAACE,SAAV,CAAoBC,YAApB,KAAqCN,QAFR;AAGpCO,IAAAA,OAAO,EAAGJ,SAAS,CAACK,SAAV,CAAoBZ,QAApB,EACLa,IADK,CACAC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASR,SAAS,CAACE,SAAV,CAAoBO,UADlC,CAAD,IACmD,EAJxB;AAKpCC,IAAAA,QAAQ,EAAEV,SAAS,CAACK,SAAV,CAAoBX,SAApB,EACLY,IADK,CACAK,CAAC,IAAIA,CAAC,CAACH,EAAF,KAASR,SAAS,CAACE,SAAV,CAAoBO,UADlC,CAAD,IACmD;AANxB,GAAhB,CAAxB;;AASA,QAAMG,kBAAkB,GAAG;AACvBC,IAAAA,cAAc,EAAErB,UADO;AAEvBsB,IAAAA,YAAY,EAAGC,IAAD,IAAUpB,iBAAiB,CAACoB,IAAD,EAAOlB,QAAP;AAFlB,GAA3B;;AAKA,QAAMmB,UAAU,GAAG,CAACC,SAAD,EAAYC,aAAZ,EAA2BC,QAA3B,MACd,EAAE,GAAGF,SAAL;AAAgB,OAAGC,aAAnB;AAAkC,OAAGC;AAArC,GADc,CAAnB;;AAGA,SAAO5B,OAAO,CAACQ,eAAD,EAAkBa,kBAAlB,EACVI,UADU,CAAP,CACSlB,qBADT,CAAP;AAEH,CArBM","sourcesContent":["import { connect } from \"react-redux\";\nimport { endEditing } from \"./stateActions\";\nimport { PRODUCTS, SUPPLIERS  } from \"./dataTypes\";\nimport { saveAndEndEditing } from \"./multiActionCreators\";\n\nexport const EditorConnector = (dataType, presentationComponent) => {\n\n    const mapStateToProps = (storeData) => ({\n        editing: storeData.stateData.editing \n            && storeData.stateData.selectedType === dataType,\n        product: (storeData.modelData[PRODUCTS]\n            .find(p => p.id === storeData.stateData.selectedId)) || {},\n        supplier:(storeData.modelData[SUPPLIERS]\n            .find(s => s.id === storeData.stateData.selectedId)) || {}\n    })\n    \n    const mapDispatchToProps = {\n        cancelCallback: endEditing,\n        saveCallback: (data) => saveAndEndEditing(data, dataType)\n    }\n    \n    const mergeProps = (dataProps, functionProps, ownProps) => \n        ({ ...dataProps, ...functionProps, ...ownProps })\n        \n    return connect(mapStateToProps, mapDispatchToProps, \n        mergeProps)(presentationComponent);\n}\n"]},"metadata":{},"sourceType":"module"}
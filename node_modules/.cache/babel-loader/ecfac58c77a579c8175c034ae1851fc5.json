{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\K. C. Fike\\\\Desktop\\\\github\\\\productapp\\\\src\\\\IsolatedEditor.js\";\nimport React, { Component } from \"react\";\nimport { RestDataSource } from \"./webservice/RestDataSource\";\nimport { ProductEditor } from \"./ProductEditor\";\nexport class IsolatedEditor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.save = data => {\n      const callback = () => this.props.history.push(\"/isolated\");\n\n      if (data.id === \"\") {\n        this.dataSource.Store(data, callback);\n      } else {\n        this.dataSource.Update(data, callback);\n      }\n    };\n\n    this.cancel = () => this.props.history.push(\"/isolated\");\n\n    this.state = {\n      dataItem: {}\n    };\n    this.dataSource = this.props.dataSource || new RestDataSource(\"http://localhost:3500/api/products\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ProductEditor, {\n      key: this.state.dataItem.id,\n      product: this.state.dataItem,\n      saveCallback: this.save,\n      cancelCallback: this.cancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 16\n      }\n    });\n  }\n\n  componentDidMount() {\n    if (this.props.match.params.mode === \"edit\") {\n      this.dataSource.GetOne(this.props.match.params.id, data => this.setState({\n        dataItem: data\n      }));\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/K. C. Fike/Desktop/github/productapp/src/IsolatedEditor.js"],"names":["React","Component","RestDataSource","ProductEditor","IsolatedEditor","constructor","props","save","data","callback","history","push","id","dataSource","Store","Update","cancel","state","dataItem","render","componentDidMount","match","params","mode","GetOne","setState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,cAAT,QAA+B,6BAA/B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AAEA,OAAO,MAAMC,cAAN,SAA6BH,SAA7B,CAAuC;AAE1CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,IATmB,GASXC,IAAD,IAAU;AACb,YAAMC,QAAQ,GAAG,MAAM,KAAKH,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB,WAAxB,CAAvB;;AACA,UAAIH,IAAI,CAACI,EAAL,KAAY,EAAhB,EAAoB;AAChB,aAAKC,UAAL,CAAgBC,KAAhB,CAAsBN,IAAtB,EAA4BC,QAA5B;AACH,OAFD,MAEO;AACH,aAAKI,UAAL,CAAgBE,MAAhB,CAAuBP,IAAvB,EAA6BC,QAA7B;AACH;AACJ,KAhBkB;;AAAA,SAkBnBO,MAlBmB,GAkBV,MAAM,KAAKV,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB,WAAxB,CAlBI;;AAEf,SAAKM,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGA,SAAKL,UAAL,GAAkB,KAAKP,KAAL,CAAWO,UAAX,IACX,IAAIX,cAAJ,CAAmB,oCAAnB,CADP;AAEH;;AAaDiB,EAAAA,MAAM,GAAG;AACL,wBAAO,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAG,KAAKF,KAAL,CAAWC,QAAX,CAAoBN,EAAzC;AACH,MAAA,OAAO,EAAG,KAAKK,KAAL,CAAWC,QADlB;AAC6B,MAAA,YAAY,EAAG,KAAKX,IADjD;AAEH,MAAA,cAAc,EAAG,KAAKS,MAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAGH;;AAEDI,EAAAA,iBAAiB,GAAG;AAChB,QAAI,KAAKd,KAAL,CAAWe,KAAX,CAAiBC,MAAjB,CAAwBC,IAAxB,KAAiC,MAArC,EAA6C;AACzC,WAAKV,UAAL,CAAgBW,MAAhB,CAAuB,KAAKlB,KAAL,CAAWe,KAAX,CAAiBC,MAAjB,CAAwBV,EAA/C,EACIJ,IAAI,IAAI,KAAKiB,QAAL,CAAc;AAAEP,QAAAA,QAAQ,EAAEV;AAAZ,OAAd,CADZ;AAEH;AACJ;;AAjCyC","sourcesContent":["import React, { Component } from \"react\";\nimport { RestDataSource } from \"./webservice/RestDataSource\";\nimport { ProductEditor } from \"./ProductEditor\";\n\nexport class IsolatedEditor extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataItem: {}\n        };\n        this.dataSource = this.props.dataSource \n            || new RestDataSource(\"http://localhost:3500/api/products\");\n    }\n\n    save = (data) => {\n        const callback = () => this.props.history.push(\"/isolated\");\n        if (data.id === \"\") {\n            this.dataSource.Store(data, callback);\n        } else {\n            this.dataSource.Update(data, callback);\n        }\n    }\n\n    cancel = () => this.props.history.push(\"/isolated\");\n\n    render() {\n        return <ProductEditor key={ this.state.dataItem.id } \n            product={ this.state.dataItem } saveCallback={ this.save } \n            cancelCallback={ this.cancel } />\n    }\n\n    componentDidMount() {\n        if (this.props.match.params.mode === \"edit\") {\n            this.dataSource.GetOne(this.props.match.params.id, \n                data => this.setState({ dataItem: data}));\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}
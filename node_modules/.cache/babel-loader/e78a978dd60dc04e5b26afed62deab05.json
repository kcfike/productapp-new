{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\K. C. Fike\\\\Desktop\\\\github\\\\productapp\\\\src\\\\ProductDisplay.js\";\nimport React, { Component } from \"react\";\nimport { ProductTable } from \"./ProductTable\";\nimport { ProductEditor } from \"./ProductEditor\";\nimport { connect } from \"react-redux\"; //import { saveProduct, deleteProduct } from \"./store\"\n\nimport { EditorConnector } from \"./store/EditorConnector\";\nimport { PRODUCTS } from \"./store/dataTypes\";\nimport { TableConnector } from \"./store/TableConnector\";\nimport { startCreatingProduct } from \"./store/stateActions\";\nconst ConnectedEditor = EditorConnector(PRODUCTS, ProductEditor);\nconst ConnectedTable = TableConnector(PRODUCTS, ProductTable);\n\nconst mapStateToProps = storeData => ({\n  editing: storeData.stateData.editing,\n  selected: storeData.modelData.products.find(item => item.id === storeData.stateData.selectedId) || {}\n});\n\nconst mapDispatchToProps = {\n  createProduct: startCreatingProduct\n};\nconst connectFunction = connect(mapStateToProps, mapDispatchToProps);\nexport const ProductDisplay = connectFunction(class extends Component {\n  // constructor(props) {\n  //     super(props);\n  //     this.state = {\n  //         showEditor: false,\n  //         selectedProduct: null\n  //     }\n  // }\n  // startEditing = (product) => {\n  //     this.setState({ showEditor: true, selectedProduct: product })\n  // }\n  // createProduct = () => {\n  //     this.setState({ showEditor: true, selectedProduct: {} })\n  // }\n  // cancelEditing = () => {\n  //     this.setState({ showEditor: false, selectedProduct: null })\n  // }\n  // saveProduct = (product) => {\n  //     this.props.saveCallback(product);\n  //     this.setState({ showEditor: false, selectedProduct: null })        \n  // }\n  render() {\n    if (this.props.editing) {\n      return /*#__PURE__*/React.createElement(ConnectedEditor, {\n        key: this.props.selected.id || -1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 24\n        }\n      }); // return <ProductEditor \n      //     key={ this.state.selectedProduct.id || -1 }\n      //     product={ this.state.selectedProduct } \n      //     saveCallback={ this.saveProduct }\n      //     cancelCallback={ this.cancelEditing } />\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"m-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(ConnectedTable, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-primary m-1\",\n        onClick: this.props.createProduct,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }\n      }, \"Create Product\")));\n    }\n  }\n\n});","map":{"version":3,"sources":["C:/Users/K. C. Fike/Desktop/github/productapp/src/ProductDisplay.js"],"names":["React","Component","ProductTable","ProductEditor","connect","EditorConnector","PRODUCTS","TableConnector","startCreatingProduct","ConnectedEditor","ConnectedTable","mapStateToProps","storeData","editing","stateData","selected","modelData","products","find","item","id","selectedId","mapDispatchToProps","createProduct","connectFunction","ProductDisplay","render","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,SAASC,oBAAT,QAAqC,sBAArC;AAEA,MAAMC,eAAe,GAAGJ,eAAe,CAACC,QAAD,EAAWH,aAAX,CAAvC;AACA,MAAMO,cAAc,GAAGH,cAAc,CAACD,QAAD,EAAWJ,YAAX,CAArC;;AAEA,MAAMS,eAAe,GAAIC,SAAD,KAAgB;AACpCC,EAAAA,OAAO,EAAED,SAAS,CAACE,SAAV,CAAoBD,OADO;AAEpCE,EAAAA,QAAQ,EAAEH,SAAS,CAACI,SAAV,CAAoBC,QAApB,CACLC,IADK,CACAC,IAAI,IAAKA,IAAI,CAACC,EAAL,KAAYR,SAAS,CAACE,SAAV,CAAoBO,UADzC,KACwD;AAH9B,CAAhB,CAAxB;;AAMA,MAAMC,kBAAkB,GAAG;AACvBC,EAAAA,aAAa,EAAEf;AADQ,CAA3B;AAIA,MAAMgB,eAAe,GAAGpB,OAAO,CAACO,eAAD,EAAkBW,kBAAlB,CAA/B;AAEA,OAAO,MAAMG,cAAc,GAAGD,eAAe,CACzC,cAAcvB,SAAd,CAAwB;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEAyB,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKC,KAAL,CAAWd,OAAf,EAAwB;AACpB,0BAAO,oBAAC,eAAD;AAAiB,QAAA,GAAG,EAAG,KAAKc,KAAL,CAAWZ,QAAX,CAAoBK,EAApB,IAA0B,CAAC,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP,CADoB,CAEpB;AACA;AACA;AACA;AACA;AACH,KAPD,MAOO;AACH,0BAAO;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACH,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADG,eAKH;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAQ,QAAA,SAAS,EAAC,qBAAlB;AACI,QAAA,OAAO,EAAG,KAAKO,KAAL,CAAWJ,aADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,CALG,CAAP;AAYH;AACJ;;AAjDmB,CADiB,CAAtC","sourcesContent":["import React, { Component } from \"react\";\nimport { ProductTable } from \"./ProductTable\"\nimport { ProductEditor } from \"./ProductEditor\";\nimport { connect } from \"react-redux\";\n//import { saveProduct, deleteProduct } from \"./store\"\nimport { EditorConnector } from \"./store/EditorConnector\";\nimport { PRODUCTS } from \"./store/dataTypes\";\nimport { TableConnector } from \"./store/TableConnector\";\nimport { startCreatingProduct } from \"./store/stateActions\";\n\nconst ConnectedEditor = EditorConnector(PRODUCTS, ProductEditor);\nconst ConnectedTable = TableConnector(PRODUCTS, ProductTable);\n\nconst mapStateToProps = (storeData) => ({\n    editing: storeData.stateData.editing,\n    selected: storeData.modelData.products\n        .find(item =>  item.id === storeData.stateData.selectedId) || {}\n})\n\nconst mapDispatchToProps = {\n    createProduct: startCreatingProduct,\n}\n\nconst connectFunction = connect(mapStateToProps, mapDispatchToProps);\n\nexport const ProductDisplay = connectFunction(\n    class extends Component {\n\n        // constructor(props) {\n        //     super(props);\n        //     this.state = {\n        //         showEditor: false,\n        //         selectedProduct: null\n        //     }\n        // }\n\n        // startEditing = (product) => {\n        //     this.setState({ showEditor: true, selectedProduct: product })\n        // }\n\n        // createProduct = () => {\n        //     this.setState({ showEditor: true, selectedProduct: {} })\n        // }\n\n        // cancelEditing = () => {\n        //     this.setState({ showEditor: false, selectedProduct: null })\n        // }\n\n        // saveProduct = (product) => {\n        //     this.props.saveCallback(product);\n        //     this.setState({ showEditor: false, selectedProduct: null })        \n        // }\n\n        render() {\n            if (this.props.editing) {\n                return <ConnectedEditor key={ this.props.selected.id || -1 } />\n                // return <ProductEditor \n                //     key={ this.state.selectedProduct.id || -1 }\n                //     product={ this.state.selectedProduct } \n                //     saveCallback={ this.saveProduct }\n                //     cancelCallback={ this.cancelEditing } />\n            } else {\n                return <div className=\"m-2\">\n                    <ConnectedTable />\n                    {/* <ProductTable products={ this.props.products }\n                        editCallback={ this.startEditing }\n                        deleteCallback={ this.props.deleteCallback } />  */}\n                    <div className=\"text-center\">\n                        <button className=\"btn btn-primary m-1\" \n                            onClick={ this.props.createProduct }>\n                            Create Product\n                        </button>\n                    </div>                        \n                </div>\n            }\n        }\n    })\n"]},"metadata":{},"sourceType":"module"}
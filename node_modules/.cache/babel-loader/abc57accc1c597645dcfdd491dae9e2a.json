{"ast":null,"code":"import { connect } from \"react-redux\"; //import { endEditing } from \"./stateActions\";\n\nimport { PRODUCTS, SUPPLIERS } from \"./dataTypes\";\nimport { saveAndEndEditing } from \"./multiActionCreators\";\nimport { withRouter } from \"react-router-dom\";\nexport const EditorConnector = (dataType, presentationComponent) => {\n  const mapStateToProps = (storeData, ownProps) => {\n    const mode = ownProps.match.params.mode;\n    const id = Number(ownProps.match.params.id);\n    return {\n      editing: mode === \"edit\" || mode === \"create\",\n      product: storeData.modelData[PRODUCTS].find(p => p.id === id) || {},\n      supplier: storeData.modelData[SUPPLIERS].find(s => s.id === id) || {}\n    };\n  };\n\n  const mapDispatchToProps = {\n    //cancelCallback: endEditing,\n    saveCallback: data => saveAndEndEditing(data, dataType)\n  };\n\n  const mergeProps = (dataProps, functionProps, ownProps) => {\n    let routedDispatchers = {\n      cancelCallback: () => ownProps.history.push(`/${dataType}`),\n      saveCallback: data => {\n        functionProps.saveCallback(data);\n        ownProps.history.push(`/${dataType}`);\n      }\n    };\n    return Object.assign({}, dataProps, routedDispatchers, ownProps);\n  };\n\n  return withRouter(connect(mapStateToProps, mapDispatchToProps, mergeProps)(presentationComponent));\n};","map":{"version":3,"sources":["C:/Users/K. C. Fike/Desktop/github/productapp/src/store/EditorConnector.js"],"names":["connect","PRODUCTS","SUPPLIERS","saveAndEndEditing","withRouter","EditorConnector","dataType","presentationComponent","mapStateToProps","storeData","ownProps","mode","match","params","id","Number","editing","product","modelData","find","p","supplier","s","mapDispatchToProps","saveCallback","data","mergeProps","dataProps","functionProps","routedDispatchers","cancelCallback","history","push","Object","assign"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB,C,CACA;;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAqC,aAArC;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAO,MAAMC,eAAe,GAAG,CAACC,QAAD,EAAWC,qBAAX,KAAqC;AAEhE,QAAMC,eAAe,GAAG,CAACC,SAAD,EAAYC,QAAZ,KAAyB;AAC7C,UAAMC,IAAI,GAAGD,QAAQ,CAACE,KAAT,CAAeC,MAAf,CAAsBF,IAAnC;AACA,UAAMG,EAAE,GAAGC,MAAM,CAACL,QAAQ,CAACE,KAAT,CAAeC,MAAf,CAAsBC,EAAvB,CAAjB;AACA,WAAO;AACHE,MAAAA,OAAO,EAAEL,IAAI,KAAK,MAAT,IAAmBA,IAAI,KAAK,QADlC;AAEHM,MAAAA,OAAO,EAAGR,SAAS,CAACS,SAAV,CAAoBjB,QAApB,EAA8BkB,IAA9B,CAAmCC,CAAC,IAAIA,CAAC,CAACN,EAAF,KAASA,EAAjD,CAAD,IAA0D,EAFhE;AAGHO,MAAAA,QAAQ,EAAEZ,SAAS,CAACS,SAAV,CAAoBhB,SAApB,EAA+BiB,IAA/B,CAAoCG,CAAC,IAAIA,CAAC,CAACR,EAAF,KAASA,EAAlD,CAAD,IAA2D;AAHjE,KAAP;AAKH,GARD;;AAUA,QAAMS,kBAAkB,GAAG;AACvB;AACAC,IAAAA,YAAY,EAAGC,IAAD,IAAUtB,iBAAiB,CAACsB,IAAD,EAAOnB,QAAP;AAFlB,GAA3B;;AAKA,QAAMoB,UAAU,GAAG,CAACC,SAAD,EAAYC,aAAZ,EAA2BlB,QAA3B,KAAwC;AACvD,QAAImB,iBAAiB,GAAG;AACpBC,MAAAA,cAAc,EAAE,MAAMpB,QAAQ,CAACqB,OAAT,CAAiBC,IAAjB,CAAuB,IAAG1B,QAAS,EAAnC,CADF;AAEpBkB,MAAAA,YAAY,EAAGC,IAAD,IAAU;AACpBG,QAAAA,aAAa,CAACJ,YAAd,CAA2BC,IAA3B;AACAf,QAAAA,QAAQ,CAACqB,OAAT,CAAiBC,IAAjB,CAAuB,IAAG1B,QAAS,EAAnC;AACH;AALmB,KAAxB;AAOA,WAAO2B,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,SAAlB,EAA6BE,iBAA7B,EAAgDnB,QAAhD,CAAP;AACH,GATD;;AAWA,SAAON,UAAU,CAACJ,OAAO,CAACQ,eAAD,EACrBe,kBADqB,EACDG,UADC,CAAP,CACkBnB,qBADlB,CAAD,CAAjB;AAEH,CA9BM","sourcesContent":["import { connect } from \"react-redux\";\n//import { endEditing } from \"./stateActions\";\nimport { PRODUCTS, SUPPLIERS  } from \"./dataTypes\";\nimport { saveAndEndEditing } from \"./multiActionCreators\";\nimport { withRouter } from \"react-router-dom\";\n\nexport const EditorConnector = (dataType, presentationComponent) => {\n\n    const mapStateToProps = (storeData, ownProps) => {\n        const mode = ownProps.match.params.mode;\n        const id = Number(ownProps.match.params.id);   \n        return {\n            editing: mode === \"edit\" || mode === \"create\",\n            product: (storeData.modelData[PRODUCTS].find(p => p.id === id)) || {},\n            supplier:(storeData.modelData[SUPPLIERS].find(s => s.id === id)) || {}            \n        }\n    }\n        \n    const mapDispatchToProps = {\n        //cancelCallback: endEditing,\n        saveCallback: (data) => saveAndEndEditing(data, dataType)\n    }\n    \n    const mergeProps = (dataProps, functionProps, ownProps) => {\n        let routedDispatchers = {\n            cancelCallback: () => ownProps.history.push(`/${dataType}`),\n            saveCallback: (data) => {\n                functionProps.saveCallback(data);\n                ownProps.history.push(`/${dataType}`);                \n            }\n        }\n        return Object.assign({}, dataProps, routedDispatchers, ownProps);\n    }\n\n    return withRouter(connect(mapStateToProps, \n        mapDispatchToProps, mergeProps)(presentationComponent));\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\K. C. Fike\\\\Desktop\\\\github\\\\productapp\\\\src\\\\graphql\\\\GraphQLEditor.js\";\nimport React, { Component } from \"react\";\nimport gql from \"graphql-tag\";\nimport * as queries from \"./queries\";\nimport * as mutations from \"./mutations\";\nimport { Query, Mutation } from \"react-apollo\";\nimport { PRODUCTS } from \"../store/dataTypes\";\nimport { ProductEditor } from \"../ProductEditor\";\nimport { SupplierEditor } from \"../SupplierEditor\";\nexport const GraphQLEditor = () => {\n  return class extends Component {\n    constructor(props) {\n      super(props);\n      this.dataType = this.props.match.params.dataType;\n      this.id = this.props.match.params.id;\n      this.query = gql(queries[this.dataType].getOne.graphql);\n      this.variables = {\n        id: this.id\n      };\n      this.mutation = gql(mutations[this.dataType].store.graphql);\n\n      this.navigation = () => props.history.push(`/${this.dataType}`);\n    }\n\n    render() {\n      return /*#__PURE__*/React.createElement(Query, {\n        query: this.query,\n        variables: this.variables,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 20\n        }\n      }, ({\n        loading,\n        data\n      }) => {\n        if (!loading) {\n          return /*#__PURE__*/React.createElement(Mutation, {\n            mutation: this.mutation,\n            onCompleted: this.navigation,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 32\n            }\n          }, store => {\n            if (this.dataType === PRODUCTS) {\n              return /*#__PURE__*/React.createElement(ProductEditor, {\n                key: this.id,\n                product: data.product,\n                saveCallback: formData => store({\n                  variables: formData\n                }),\n                cancelCallback: this.navigation,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 44\n                }\n              });\n            } else {\n              return /*#__PURE__*/React.createElement(SupplierEditor, {\n                key: this.id,\n                supplier: data.supplier,\n                saveCallback: formData => store({\n                  variables: formData\n                }),\n                cancelCallback: this.navigation,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 44\n                }\n              });\n            }\n          });\n        } else {\n          return null;\n        }\n      });\n    }\n\n  };\n};","map":{"version":3,"sources":["C:/Users/K. C. Fike/Desktop/github/productapp/src/graphql/GraphQLEditor.js"],"names":["React","Component","gql","queries","mutations","Query","Mutation","PRODUCTS","ProductEditor","SupplierEditor","GraphQLEditor","constructor","props","dataType","match","params","id","query","getOne","graphql","variables","mutation","store","navigation","history","push","render","loading","data","product","formData","supplier"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;AACA,OAAO,KAAKC,SAAZ,MAA2B,aAA3B;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,cAAhC;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,cAAT,QAA+B,mBAA/B;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAE/B,SAAO,cAAcT,SAAd,CAAwB;AAE3BU,IAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,YAAMA,KAAN;AACA,WAAKC,QAAL,GAAgB,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBF,QAAxC;AACA,WAAKG,EAAL,GAAU,KAAKJ,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,EAAlC;AACA,WAAKC,KAAL,GAAaf,GAAG,CAACC,OAAO,CAAC,KAAKU,QAAN,CAAP,CAAuBK,MAAvB,CAA8BC,OAA/B,CAAhB;AACA,WAAKC,SAAL,GAAiB;AAAEJ,QAAAA,EAAE,EAAE,KAAKA;AAAX,OAAjB;AACA,WAAKK,QAAL,GAAgBnB,GAAG,CAACE,SAAS,CAAC,KAAKS,QAAN,CAAT,CAAyBS,KAAzB,CAA+BH,OAAhC,CAAnB;;AACA,WAAKI,UAAL,GAAkB,MAAMX,KAAK,CAACY,OAAN,CAAcC,IAAd,CAAoB,IAAG,KAAKZ,QAAS,EAArC,CAAxB;AACH;;AAEDa,IAAAA,MAAM,GAAG;AACL,0BAAO,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAG,KAAKT,KAApB;AAA2B,QAAA,SAAS,EAAG,KAAKG,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEH,CAAC;AAACO,QAAAA,OAAD;AAAUC,QAAAA;AAAV,OAAD,KAAqB;AACjB,YAAI,CAACD,OAAL,EAAc;AACV,8BAAO,oBAAC,QAAD;AAAU,YAAA,QAAQ,EAAG,KAAKN,QAA1B;AACC,YAAA,WAAW,EAAG,KAAKE,UADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAEAD,KAAD,IAAW;AACT,gBAAI,KAAKT,QAAL,KAAkBN,QAAtB,EAAgC;AAC5B,kCAAO,oBAAC,aAAD;AAAe,gBAAA,GAAG,EAAG,KAAKS,EAA1B;AACH,gBAAA,OAAO,EAAGY,IAAI,CAACC,OADZ;AAEH,gBAAA,YAAY,EAAIC,QAAD,IACXR,KAAK,CAAC;AAACF,kBAAAA,SAAS,EAAEU;AAAZ,iBAAD,CAHN;AAIH,gBAAA,cAAc,EAAG,KAAKP,UAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAKH,aAND,MAMO;AACH,kCAAO,oBAAC,cAAD;AAAgB,gBAAA,GAAG,EAAG,KAAKP,EAA3B;AACH,gBAAA,QAAQ,EAAGY,IAAI,CAACG,QADb;AAEH,gBAAA,YAAY,EAAID,QAAQ,IACpBR,KAAK,CAAC;AAAEF,kBAAAA,SAAS,EAAEU;AAAb,iBAAD,CAHN;AAIH,gBAAA,cAAc,EAAG,KAAKP,UAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAKH;AACJ,WAhBE,CAAP;AAmBH,SApBD,MAoBO;AACH,iBAAO,IAAP;AACH;AACJ,OA1BE,CAAP;AA6BH;;AA1C0B,GAA/B;AA4CH,CA9CM","sourcesContent":["import React, { Component } from \"react\";\nimport gql from \"graphql-tag\";\nimport * as queries from \"./queries\";\nimport * as mutations from \"./mutations\";\nimport { Query, Mutation } from \"react-apollo\";\nimport { PRODUCTS } from \"../store/dataTypes\";\nimport { ProductEditor } from \"../ProductEditor\";\nimport { SupplierEditor } from \"../SupplierEditor\";\n\nexport const GraphQLEditor = () => {\n\n    return class extends Component {\n\n        constructor(props) {\n            super(props);\n            this.dataType = this.props.match.params.dataType;\n            this.id = this.props.match.params.id;\n            this.query = gql(queries[this.dataType].getOne.graphql);\n            this.variables = { id: this.id };\n            this.mutation = gql(mutations[this.dataType].store.graphql);\n            this.navigation = () => props.history.push(`/${this.dataType}`);\n        }\n\n        render() {\n            return <Query query={ this.query} variables={ this.variables }>\n            { \n                ({loading, data}) => {\n                    if (!loading) {\n                        return <Mutation mutation={ this.mutation } \n                                onCompleted={ this.navigation }>\n                            { (store) => {\n                                if (this.dataType === PRODUCTS) { \n                                    return <ProductEditor key={ this.id } \n                                        product={ data.product }\n                                        saveCallback={ (formData) => \n                                            store({variables: formData})}\n                                        cancelCallback={ this.navigation } />\n                                } else {\n                                    return <SupplierEditor key={ this.id }\n                                        supplier={ data.supplier }\n                                        saveCallback={ (formData => \n                                            store({ variables: formData }))}\n                                        cancelCallback={ this.navigation } />\n                                }\n                            }\n                        }\n                        </Mutation>\n                    } else {\n                        return null;\n                    }\n                }\n            }\n            </Query>\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import Axios from \"axios\";\nexport class RestDataSource {\n  constructor(base_url, errorCallback) {\n    this.BASE_URL = base_url;\n    this.handleError = errorCallback;\n  }\n\n  GetData(callback) {\n    this.SendRequest(\"get\", this.BASE_URL, callback);\n  }\n\n  async GetOne(id, callback) {\n    this.SendRequest(\"get\", `${this.BASE_URL}/${id}`, callback);\n  }\n\n  async Store(data, callback) {\n    this.SendRequest(\"post\", this.BASE_URL, callback, data);\n  }\n\n  async Update(data, callback) {\n    this.SendRequest(\"put\", `${this.BASE_URL}/${data.id}`, callback, data);\n  }\n\n  async Delete(data, callback) {\n    this.SendRequest(\"delete\", `${this.BASE_URL}/${data.id}`, callback, data);\n  }\n\n  async SendRequest(method, url, callback, data) {\n    try {\n      callback((await Axios.request({\n        method: method,\n        url: url,\n        data: data\n      })).data);\n    } catch (err) {\n      this.handleError(\"Operation Failed: Network Error\");\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/K. C. Fike/Desktop/github/productapp/src/webservice/RestDataSource.js"],"names":["Axios","RestDataSource","constructor","base_url","errorCallback","BASE_URL","handleError","GetData","callback","SendRequest","GetOne","id","Store","data","Update","Delete","method","url","request","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,cAAN,CAAqB;AAExBC,EAAAA,WAAW,CAACC,QAAD,EAAWC,aAAX,EAA0B;AACjC,SAAKC,QAAL,GAAgBF,QAAhB;AACA,SAAKG,WAAL,GAAmBF,aAAnB;AACH;;AAEDG,EAAAA,OAAO,CAACC,QAAD,EAAW;AACd,SAAKC,WAAL,CAAiB,KAAjB,EAAwB,KAAKJ,QAA7B,EAAuCG,QAAvC;AACH;;AAED,QAAME,MAAN,CAAaC,EAAb,EAAiBH,QAAjB,EAA2B;AACvB,SAAKC,WAAL,CAAiB,KAAjB,EAAyB,GAAE,KAAKJ,QAAS,IAAGM,EAAG,EAA/C,EAAkDH,QAAlD;AACH;;AAED,QAAMI,KAAN,CAAYC,IAAZ,EAAkBL,QAAlB,EAA4B;AACxB,SAAKC,WAAL,CAAiB,MAAjB,EAAyB,KAAKJ,QAA9B,EAAwCG,QAAxC,EAAkDK,IAAlD;AACH;;AAED,QAAMC,MAAN,CAAaD,IAAb,EAAmBL,QAAnB,EAA6B;AACzB,SAAKC,WAAL,CAAiB,KAAjB,EAAyB,GAAE,KAAKJ,QAAS,IAAGQ,IAAI,CAACF,EAAG,EAApD,EAAuDH,QAAvD,EAAiEK,IAAjE;AACH;;AAED,QAAME,MAAN,CAAaF,IAAb,EAAmBL,QAAnB,EAA6B;AACzB,SAAKC,WAAL,CAAiB,QAAjB,EAA4B,GAAE,KAAKJ,QAAS,IAAGQ,IAAI,CAACF,EAAG,EAAvD,EAA0DH,QAA1D,EAAoEK,IAApE;AACH;;AAED,QAAMJ,WAAN,CAAkBO,MAAlB,EAA0BC,GAA1B,EAA+BT,QAA/B,EAAyCK,IAAzC,EAA+C;AAC3C,QAAI;AACAL,MAAAA,QAAQ,CAAC,CAAC,MAAMR,KAAK,CAACkB,OAAN,CAAc;AAC1BF,QAAAA,MAAM,EAAEA,MADkB;AAE1BC,QAAAA,GAAG,EAAEA,GAFqB;AAG1BJ,QAAAA,IAAI,EAAEA;AAHoB,OAAd,CAAP,EAILA,IAJI,CAAR;AAKH,KAND,CAME,OAAMM,GAAN,EAAW;AACT,WAAKb,WAAL,CAAiB,iCAAjB;AACH;AACJ;;AArCuB","sourcesContent":["import Axios from \"axios\";\n\nexport class RestDataSource {\n\n    constructor(base_url, errorCallback) {\n        this.BASE_URL = base_url;\n        this.handleError = errorCallback;\n    }\n\n    GetData(callback) {\n        this.SendRequest(\"get\", this.BASE_URL, callback);\n    }\n\n    async GetOne(id, callback) {\n        this.SendRequest(\"get\", `${this.BASE_URL}/${id}`, callback);\n    }\n\n    async Store(data, callback) {\n        this.SendRequest(\"post\", this.BASE_URL, callback, data)\n    }\n\n    async Update(data, callback) {\n        this.SendRequest(\"put\", `${this.BASE_URL}/${data.id}`, callback, data);\n    }\n\n    async Delete(data, callback) {\n        this.SendRequest(\"delete\", `${this.BASE_URL}/${data.id}`, callback, data);\n    }\n\n    async SendRequest(method, url, callback, data) {\n        try {\n            callback((await Axios.request({\n                method: method, \n                url: url,\n                data: data\n            })).data);\n        } catch(err) {\n            this.handleError(\"Operation Failed: Network Error\");            \n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}
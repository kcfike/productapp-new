{"ast":null,"code":"import { connect } from \"react-redux\";\nimport { startEditingProduct, startEditingSupplier } from \"./stateActions\";\nimport { deleteProduct, deleteSupplier } from \"./modelActionCreators\";\nimport { PRODUCTS, SUPPLIERS } from \"./dataTypes\";\nexport const TableConnector = (dataType, presentationComponent) => {\n  const mapStateToProps = (storeData, ownProps) => {\n    if (!ownProps.needSuppliers) {\n      return {\n        products: storeData.modelData[PRODUCTS]\n      };\n    } else {\n      return {\n        suppliers: storeData.modelData[SUPPLIERS].map(supp => ({ ...supp,\n          products: supp.products.map(id => storeData.modelData[PRODUCTS].find(p => p.id === Number(id)) || id).map(val => val.name || val)\n        }))\n      };\n    }\n  };\n\n  const mapDispatchToProps = (dispatch, ownProps) => {\n    if (!ownProps.needSuppliers) {\n      return {\n        editCallback: (...args) => dispatch(startEditingProduct(...args)),\n        deleteCallback: (...args) => dispatch(deleteProduct(...args))\n      };\n    } else {\n      return {\n        editCallback: (...args) => dispatch(startEditingSupplier(...args)),\n        deleteCallback: (...args) => dispatch(deleteSupplier(...args))\n      };\n    }\n  };\n\n  return connect(mapStateToProps, mapDispatchToProps)(presentationComponent);\n};","map":{"version":3,"sources":["C:/Users/K. C. Fike/Desktop/github/productapp/src/store/TableConnector.js"],"names":["connect","startEditingProduct","startEditingSupplier","deleteProduct","deleteSupplier","PRODUCTS","SUPPLIERS","TableConnector","dataType","presentationComponent","mapStateToProps","storeData","ownProps","needSuppliers","products","modelData","suppliers","map","supp","id","find","p","Number","val","name","mapDispatchToProps","dispatch","editCallback","args","deleteCallback"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,mBAAT,EAA8BC,oBAA9B,QAA0D,gBAA1D;AACA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,uBAA9C;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,aAApC;AAEA,OAAO,MAAMC,cAAc,GAAG,CAACC,QAAD,EAAWC,qBAAX,KAAqC;AAE/D,QAAMC,eAAe,GAAG,CAACC,SAAD,EAAYC,QAAZ,KAAyB;AAC7C,QAAI,CAACA,QAAQ,CAACC,aAAd,EAA6B;AACzB,aAAO;AAAEC,QAAAA,QAAQ,EAAEH,SAAS,CAACI,SAAV,CAAoBV,QAApB;AAAZ,OAAP;AACH,KAFD,MAEO;AACH,aAAO;AACHW,QAAAA,SAAS,EAAEL,SAAS,CAACI,SAAV,CAAoBT,SAApB,EAA+BW,GAA/B,CAAmCC,IAAI,KAAK,EACnD,GAAGA,IADgD;AAEnDJ,UAAAA,QAAQ,EAAEI,IAAI,CAACJ,QAAL,CAAcG,GAAd,CAAkBE,EAAE,IAC1BR,SAAS,CAACI,SAAV,CAAoBV,QAApB,EACKe,IADL,CACUC,CAAC,IAAIA,CAAC,CAACF,EAAF,KAASG,MAAM,CAACH,EAAD,CAD9B,KACuCA,EAFjC,EAGDF,GAHC,CAGGM,GAAG,IAAIA,GAAG,CAACC,IAAJ,IAAYD,GAHtB;AAFyC,SAAL,CAAvC;AADR,OAAP;AASH;AACJ,GAdD;;AAgBA,QAAME,kBAAkB,GAAG,CAACC,QAAD,EAAWd,QAAX,KAAwB;AAC/C,QAAI,CAACA,QAAQ,CAACC,aAAd,EAA6B;AACzB,aAAO;AACHc,QAAAA,YAAY,EAAE,CAAC,GAAGC,IAAJ,KAAaF,QAAQ,CAACzB,mBAAmB,CAAC,GAAG2B,IAAJ,CAApB,CADhC;AAEHC,QAAAA,cAAc,EAAE,CAAC,GAAGD,IAAJ,KAAaF,QAAQ,CAACvB,aAAa,CAAC,GAAGyB,IAAJ,CAAd;AAFlC,OAAP;AAIH,KALD,MAKO;AACH,aAAO;AACHD,QAAAA,YAAY,EAAE,CAAC,GAAGC,IAAJ,KAAaF,QAAQ,CAACxB,oBAAoB,CAAC,GAAG0B,IAAJ,CAArB,CADhC;AAEHC,QAAAA,cAAc,EAAE,CAAC,GAAGD,IAAJ,KAAaF,QAAQ,CAACtB,cAAc,CAAC,GAAGwB,IAAJ,CAAf;AAFlC,OAAP;AAIH;AACJ,GAZD;;AAcA,SAAO5B,OAAO,CAACU,eAAD,EAAkBe,kBAAlB,CAAP,CAA6ChB,qBAA7C,CAAP;AACH,CAjCM","sourcesContent":["import { connect } from \"react-redux\";\nimport { startEditingProduct, startEditingSupplier } from \"./stateActions\";\nimport { deleteProduct, deleteSupplier } from \"./modelActionCreators\";\nimport { PRODUCTS, SUPPLIERS } from \"./dataTypes\";\n\nexport const TableConnector = (dataType, presentationComponent) => {\n\n    const mapStateToProps = (storeData, ownProps) => {\n        if (!ownProps.needSuppliers) {\n            return { products: storeData.modelData[PRODUCTS] };\n        } else {\n            return { \n                suppliers: storeData.modelData[SUPPLIERS].map(supp => ({\n                    ...supp, \n                    products: supp.products.map(id => \n                        storeData.modelData[PRODUCTS]\n                            .find(p => p.id === Number(id)) || id)\n                            .map(val => val.name || val)\n                    }))\n            }\n        }\n    }\n    \n    const mapDispatchToProps = (dispatch, ownProps) => {\n        if (!ownProps.needSuppliers) {\n            return {\n                editCallback: (...args) => dispatch(startEditingProduct(...args)),\n                deleteCallback: (...args) => dispatch(deleteProduct(...args))\n            } \n        } else {\n            return {\n                editCallback: (...args) => dispatch(startEditingSupplier(...args)),\n                deleteCallback: (...args) => dispatch(deleteSupplier(...args)) \n            }\n        }\n    }\n\n    return connect(mapStateToProps, mapDispatchToProps)(presentationComponent);\n}\n"]},"metadata":{},"sourceType":"module"}